{"ast":null,"code":"var _jsxFileName = \"D:\\\\IRFAN\\\\1.WEB\\\\GitHub\\\\FULLSTACK\\\\MERN-3-BQ\\\\weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [temprature, setTemprature] = useState(null);\n  const [humidity, setHumidity] = useState(null);\n  const [seaLevel, setSeaLevel] = useState(null);\n  const [tempmin, setTempMin] = useState(null);\n  const [tempmax, setTempMax] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const apiKey = \"236becae49a1c0080a598c5fd17d8d4b\";\n        const city = \"Lahore\";\n        const country = \"PK\";\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${apiKey}&units=metric`;\n        const response = await axios.get(url);\n        setTemprature(response.data.main.temp);\n        setHumidity(response.data.main.humidity);\n        setSeaLevel(response.data.main.sea_level);\n        setTempMin(response.data.main.temp_min);\n        setTempMax(response.data.main.temp_max);\n      } catch (err) {\n        setError(\"Failed to fetch weather data\");\n        console.error(err);\n      }\n    };\n    fetchWeather();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontFamily: \"Arial\",\n        textAlign: \"center\",\n        marginTop: \"50px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Weather in Lahore, Pakistan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 3\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this) : temprature !== null ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" The Current Humidity is \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: temprature\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n_s(App, \"RYtxO788wbVxlySnNd9IVkNW5u0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","temprature","setTemprature","humidity","setHumidity","seaLevel","setSeaLevel","tempmin","setTempMin","tempmax","setTempMax","error","setError","fetchWeather","apiKey","city","country","url","response","get","data","main","temp","sea_level","temp_min","temp_max","err","console","children","style","fontFamily","textAlign","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","color","_c","$RefreshReg$"],"sources":["D:/IRFAN/1.WEB/GitHub/FULLSTACK/MERN-3-BQ/weather-app/src/App.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';\nimport axios from 'axios';\n\nconst App = () => {\n  const [temprature, setTemprature] = useState(null);\n  const [humidity, setHumidity] = useState(null);\n  const [seaLevel, setSeaLevel] = useState(null);\n  const [tempmin, setTempMin] = useState(null);\n  const [tempmax, setTempMax] = useState(null);\n\n  const [ error, setError] = useState(null);\n  \n  useEffect(() => {\n    const fetchWeather = async () => {\n      try {\n        const apiKey = \"236becae49a1c0080a598c5fd17d8d4b\";\n        const city = \"Lahore\";\n        const country = \"PK\";\n        const url =`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${apiKey}&units=metric`;\n\n        const response = await axios.get(url);\n        setTemprature(response.data.main.temp);\n        setHumidity(response.data.main.humidity);\n        setSeaLevel(response.data.main.sea_level);\n        setTempMin(response.data.main.temp_min);\n        setTempMax(response.data.main.temp_max);\n        \n        }\n        catch (err) {\n          setError(\"Failed to fetch weather data\");\n          console.error(err);\n        }\n      };\n      fetchWeather();  \n}, []);\n\nreturn (\n  <>\n  <div style={{ fontFamily: \"Arial\", textAlign: \"center\", marginTop: \"50px\"  }}>\n  <h1>Weather in Lahore, Pakistan</h1>\n  {error ? (\n    <p style={{ color: \"red\" }}>{error}</p>\n  ) : temprature !== null ? (\n    <p> The Current Humidity is <strong>{temprature}</strong></p>\n\n  ) : (\n    <p>Loading...</p>\n  )}\n  </div>\n\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}